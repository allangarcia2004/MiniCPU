// Copyright (C) 2021  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.

// VENDOR "Altera"
// PROGRAM "Quartus Prime"
// VERSION "Version 21.1.0 Build 842 10/21/2021 SJ Lite Edition"

// DATE "10/11/2022 16:45:51"

// 
// Device: Altera 5CGXFC7C7F23C8 Package FBGA484
// 

// 
// This Verilog file should be used for Questa Intel FPGA (Verilog) only
// 

`timescale 1 ps/ 1 ps

module ControlUnit (
	REG_1_LOAD,
	TON,
	MEM_CONTENTS,
	TO,
	JMPN,
	REG_1_CLRN,
	REG_2_LOAD,
	REG_2_CLRN,
	PC_LOAD,
	JMP,
	PC_CLRN,
	IN,
	INN,
	PC_D,
	ULA_Op,
	ULA_OPERAND,
	ULA_REGISTER,
	REG_1,
	REG_2);
output 	REG_1_LOAD;
output 	[1:0] TON;
input 	[15:0] MEM_CONTENTS;
output 	[1:0] TO;
output 	[1:0] JMPN;
output 	REG_1_CLRN;
output 	REG_2_LOAD;
output 	REG_2_CLRN;
output 	PC_LOAD;
output 	[1:0] JMP;
output 	PC_CLRN;
output 	[1:0] IN;
output 	[1:0] INN;
output 	[3:0] PC_D;
output 	[1:0] ULA_Op;
output 	[3:0] ULA_OPERAND;
output 	[3:0] ULA_REGISTER;
input 	[3:0] REG_1;
input 	[3:0] REG_2;

wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \MEM_CONTENTS[7]~input_o ;
wire \MEM_CONTENTS[6]~input_o ;
wire \MEM_CONTENTS[5]~input_o ;
wire \MEM_CONTENTS[4]~input_o ;
wire \REG_1_LOAD~output_o ;
wire \TON[1]~output_o ;
wire \TON[0]~output_o ;
wire \TO[1]~output_o ;
wire \TO[0]~output_o ;
wire \JMPN[1]~output_o ;
wire \JMPN[0]~output_o ;
wire \REG_1_CLRN~output_o ;
wire \REG_2_LOAD~output_o ;
wire \REG_2_CLRN~output_o ;
wire \PC_LOAD~output_o ;
wire \JMP[1]~output_o ;
wire \JMP[0]~output_o ;
wire \PC_CLRN~output_o ;
wire \IN[1]~output_o ;
wire \IN[0]~output_o ;
wire \INN[1]~output_o ;
wire \INN[0]~output_o ;
wire \PC_D[3]~output_o ;
wire \PC_D[2]~output_o ;
wire \PC_D[1]~output_o ;
wire \PC_D[0]~output_o ;
wire \ULA_Op[1]~output_o ;
wire \ULA_Op[0]~output_o ;
wire \ULA_OPERAND[3]~output_o ;
wire \ULA_OPERAND[2]~output_o ;
wire \ULA_OPERAND[1]~output_o ;
wire \ULA_OPERAND[0]~output_o ;
wire \ULA_REGISTER[3]~output_o ;
wire \ULA_REGISTER[2]~output_o ;
wire \ULA_REGISTER[1]~output_o ;
wire \ULA_REGISTER[0]~output_o ;
wire \MEM_CONTENTS[15]~input_o ;
wire \MEM_CONTENTS[14]~input_o ;
wire \MEM_CONTENTS[11]~input_o ;
wire \MEM_CONTENTS[10]~input_o ;
wire \inst17~combout ;
wire \inst17~0_combout ;
wire \inst18~combout ;
wire \inst8~combout ;
wire \inst10~combout ;
wire \MEM_CONTENTS[13]~input_o ;
wire \MEM_CONTENTS[12]~input_o ;
wire \MEM_CONTENTS[3]~input_o ;
wire \MEM_CONTENTS[2]~input_o ;
wire \MEM_CONTENTS[1]~input_o ;
wire \MEM_CONTENTS[0]~input_o ;
wire \MEM_CONTENTS[9]~input_o ;
wire \MEM_CONTENTS[8]~input_o ;
wire \REG_2[3]~input_o ;
wire \REG_1[3]~input_o ;
wire \inst5|LPM_MUX_component|auto_generated|l2_w3_n0_mux_dataout~0_combout ;
wire \REG_2[2]~input_o ;
wire \REG_1[2]~input_o ;
wire \inst5|LPM_MUX_component|auto_generated|l2_w2_n0_mux_dataout~0_combout ;
wire \REG_2[1]~input_o ;
wire \REG_1[1]~input_o ;
wire \inst5|LPM_MUX_component|auto_generated|l2_w1_n0_mux_dataout~0_combout ;
wire \REG_2[0]~input_o ;
wire \REG_1[0]~input_o ;
wire \inst5|LPM_MUX_component|auto_generated|l2_w0_n0_mux_dataout~0_combout ;


cyclonev_io_obuf \REG_1_LOAD~output (
	.i(\inst17~combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\REG_1_LOAD~output_o ),
	.obar());
// synopsys translate_off
defparam \REG_1_LOAD~output .bus_hold = "false";
defparam \REG_1_LOAD~output .open_drain_output = "false";
defparam \REG_1_LOAD~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \TON[1]~output (
	.i(!\MEM_CONTENTS[15]~input_o ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\TON[1]~output_o ),
	.obar());
// synopsys translate_off
defparam \TON[1]~output .bus_hold = "false";
defparam \TON[1]~output .open_drain_output = "false";
defparam \TON[1]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \TON[0]~output (
	.i(!\MEM_CONTENTS[14]~input_o ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\TON[0]~output_o ),
	.obar());
// synopsys translate_off
defparam \TON[0]~output .bus_hold = "false";
defparam \TON[0]~output .open_drain_output = "false";
defparam \TON[0]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \TO[1]~output (
	.i(\MEM_CONTENTS[15]~input_o ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\TO[1]~output_o ),
	.obar());
// synopsys translate_off
defparam \TO[1]~output .bus_hold = "false";
defparam \TO[1]~output .open_drain_output = "false";
defparam \TO[1]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \TO[0]~output (
	.i(\MEM_CONTENTS[14]~input_o ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\TO[0]~output_o ),
	.obar());
// synopsys translate_off
defparam \TO[0]~output .bus_hold = "false";
defparam \TO[0]~output .open_drain_output = "false";
defparam \TO[0]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \JMPN[1]~output (
	.i(!\MEM_CONTENTS[11]~input_o ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\JMPN[1]~output_o ),
	.obar());
// synopsys translate_off
defparam \JMPN[1]~output .bus_hold = "false";
defparam \JMPN[1]~output .open_drain_output = "false";
defparam \JMPN[1]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \JMPN[0]~output (
	.i(!\MEM_CONTENTS[10]~input_o ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\JMPN[0]~output_o ),
	.obar());
// synopsys translate_off
defparam \JMPN[0]~output .bus_hold = "false";
defparam \JMPN[0]~output .open_drain_output = "false";
defparam \JMPN[0]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \REG_1_CLRN~output (
	.i(!\inst17~0_combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\REG_1_CLRN~output_o ),
	.obar());
// synopsys translate_off
defparam \REG_1_CLRN~output .bus_hold = "false";
defparam \REG_1_CLRN~output .open_drain_output = "false";
defparam \REG_1_CLRN~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \REG_2_LOAD~output (
	.i(\inst18~combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\REG_2_LOAD~output_o ),
	.obar());
// synopsys translate_off
defparam \REG_2_LOAD~output .bus_hold = "false";
defparam \REG_2_LOAD~output .open_drain_output = "false";
defparam \REG_2_LOAD~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \REG_2_CLRN~output (
	.i(!\inst17~0_combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\REG_2_CLRN~output_o ),
	.obar());
// synopsys translate_off
defparam \REG_2_CLRN~output .bus_hold = "false";
defparam \REG_2_CLRN~output .open_drain_output = "false";
defparam \REG_2_CLRN~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \PC_LOAD~output (
	.i(\inst8~combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\PC_LOAD~output_o ),
	.obar());
// synopsys translate_off
defparam \PC_LOAD~output .bus_hold = "false";
defparam \PC_LOAD~output .open_drain_output = "false";
defparam \PC_LOAD~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \JMP[1]~output (
	.i(\MEM_CONTENTS[11]~input_o ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\JMP[1]~output_o ),
	.obar());
// synopsys translate_off
defparam \JMP[1]~output .bus_hold = "false";
defparam \JMP[1]~output .open_drain_output = "false";
defparam \JMP[1]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \JMP[0]~output (
	.i(\MEM_CONTENTS[10]~input_o ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\JMP[0]~output_o ),
	.obar());
// synopsys translate_off
defparam \JMP[0]~output .bus_hold = "false";
defparam \JMP[0]~output .open_drain_output = "false";
defparam \JMP[0]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \PC_CLRN~output (
	.i(!\inst10~combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\PC_CLRN~output_o ),
	.obar());
// synopsys translate_off
defparam \PC_CLRN~output .bus_hold = "false";
defparam \PC_CLRN~output .open_drain_output = "false";
defparam \PC_CLRN~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \IN[1]~output (
	.i(\MEM_CONTENTS[13]~input_o ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\IN[1]~output_o ),
	.obar());
// synopsys translate_off
defparam \IN[1]~output .bus_hold = "false";
defparam \IN[1]~output .open_drain_output = "false";
defparam \IN[1]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \IN[0]~output (
	.i(\MEM_CONTENTS[12]~input_o ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\IN[0]~output_o ),
	.obar());
// synopsys translate_off
defparam \IN[0]~output .bus_hold = "false";
defparam \IN[0]~output .open_drain_output = "false";
defparam \IN[0]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \INN[1]~output (
	.i(!\MEM_CONTENTS[13]~input_o ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\INN[1]~output_o ),
	.obar());
// synopsys translate_off
defparam \INN[1]~output .bus_hold = "false";
defparam \INN[1]~output .open_drain_output = "false";
defparam \INN[1]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \INN[0]~output (
	.i(!\MEM_CONTENTS[12]~input_o ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\INN[0]~output_o ),
	.obar());
// synopsys translate_off
defparam \INN[0]~output .bus_hold = "false";
defparam \INN[0]~output .open_drain_output = "false";
defparam \INN[0]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \PC_D[3]~output (
	.i(\MEM_CONTENTS[3]~input_o ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\PC_D[3]~output_o ),
	.obar());
// synopsys translate_off
defparam \PC_D[3]~output .bus_hold = "false";
defparam \PC_D[3]~output .open_drain_output = "false";
defparam \PC_D[3]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \PC_D[2]~output (
	.i(\MEM_CONTENTS[2]~input_o ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\PC_D[2]~output_o ),
	.obar());
// synopsys translate_off
defparam \PC_D[2]~output .bus_hold = "false";
defparam \PC_D[2]~output .open_drain_output = "false";
defparam \PC_D[2]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \PC_D[1]~output (
	.i(\MEM_CONTENTS[1]~input_o ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\PC_D[1]~output_o ),
	.obar());
// synopsys translate_off
defparam \PC_D[1]~output .bus_hold = "false";
defparam \PC_D[1]~output .open_drain_output = "false";
defparam \PC_D[1]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \PC_D[0]~output (
	.i(\MEM_CONTENTS[0]~input_o ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\PC_D[0]~output_o ),
	.obar());
// synopsys translate_off
defparam \PC_D[0]~output .bus_hold = "false";
defparam \PC_D[0]~output .open_drain_output = "false";
defparam \PC_D[0]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \ULA_Op[1]~output (
	.i(\MEM_CONTENTS[9]~input_o ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\ULA_Op[1]~output_o ),
	.obar());
// synopsys translate_off
defparam \ULA_Op[1]~output .bus_hold = "false";
defparam \ULA_Op[1]~output .open_drain_output = "false";
defparam \ULA_Op[1]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \ULA_Op[0]~output (
	.i(\MEM_CONTENTS[8]~input_o ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\ULA_Op[0]~output_o ),
	.obar());
// synopsys translate_off
defparam \ULA_Op[0]~output .bus_hold = "false";
defparam \ULA_Op[0]~output .open_drain_output = "false";
defparam \ULA_Op[0]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \ULA_OPERAND[3]~output (
	.i(\MEM_CONTENTS[3]~input_o ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\ULA_OPERAND[3]~output_o ),
	.obar());
// synopsys translate_off
defparam \ULA_OPERAND[3]~output .bus_hold = "false";
defparam \ULA_OPERAND[3]~output .open_drain_output = "false";
defparam \ULA_OPERAND[3]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \ULA_OPERAND[2]~output (
	.i(\MEM_CONTENTS[2]~input_o ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\ULA_OPERAND[2]~output_o ),
	.obar());
// synopsys translate_off
defparam \ULA_OPERAND[2]~output .bus_hold = "false";
defparam \ULA_OPERAND[2]~output .open_drain_output = "false";
defparam \ULA_OPERAND[2]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \ULA_OPERAND[1]~output (
	.i(\MEM_CONTENTS[1]~input_o ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\ULA_OPERAND[1]~output_o ),
	.obar());
// synopsys translate_off
defparam \ULA_OPERAND[1]~output .bus_hold = "false";
defparam \ULA_OPERAND[1]~output .open_drain_output = "false";
defparam \ULA_OPERAND[1]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \ULA_OPERAND[0]~output (
	.i(\MEM_CONTENTS[0]~input_o ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\ULA_OPERAND[0]~output_o ),
	.obar());
// synopsys translate_off
defparam \ULA_OPERAND[0]~output .bus_hold = "false";
defparam \ULA_OPERAND[0]~output .open_drain_output = "false";
defparam \ULA_OPERAND[0]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \ULA_REGISTER[3]~output (
	.i(\inst5|LPM_MUX_component|auto_generated|l2_w3_n0_mux_dataout~0_combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\ULA_REGISTER[3]~output_o ),
	.obar());
// synopsys translate_off
defparam \ULA_REGISTER[3]~output .bus_hold = "false";
defparam \ULA_REGISTER[3]~output .open_drain_output = "false";
defparam \ULA_REGISTER[3]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \ULA_REGISTER[2]~output (
	.i(\inst5|LPM_MUX_component|auto_generated|l2_w2_n0_mux_dataout~0_combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\ULA_REGISTER[2]~output_o ),
	.obar());
// synopsys translate_off
defparam \ULA_REGISTER[2]~output .bus_hold = "false";
defparam \ULA_REGISTER[2]~output .open_drain_output = "false";
defparam \ULA_REGISTER[2]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \ULA_REGISTER[1]~output (
	.i(\inst5|LPM_MUX_component|auto_generated|l2_w1_n0_mux_dataout~0_combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\ULA_REGISTER[1]~output_o ),
	.obar());
// synopsys translate_off
defparam \ULA_REGISTER[1]~output .bus_hold = "false";
defparam \ULA_REGISTER[1]~output .open_drain_output = "false";
defparam \ULA_REGISTER[1]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \ULA_REGISTER[0]~output (
	.i(\inst5|LPM_MUX_component|auto_generated|l2_w0_n0_mux_dataout~0_combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\ULA_REGISTER[0]~output_o ),
	.obar());
// synopsys translate_off
defparam \ULA_REGISTER[0]~output .bus_hold = "false";
defparam \ULA_REGISTER[0]~output .open_drain_output = "false";
defparam \ULA_REGISTER[0]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_ibuf \MEM_CONTENTS[15]~input (
	.i(MEM_CONTENTS[15]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\MEM_CONTENTS[15]~input_o ));
// synopsys translate_off
defparam \MEM_CONTENTS[15]~input .bus_hold = "false";
defparam \MEM_CONTENTS[15]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \MEM_CONTENTS[14]~input (
	.i(MEM_CONTENTS[14]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\MEM_CONTENTS[14]~input_o ));
// synopsys translate_off
defparam \MEM_CONTENTS[14]~input .bus_hold = "false";
defparam \MEM_CONTENTS[14]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \MEM_CONTENTS[11]~input (
	.i(MEM_CONTENTS[11]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\MEM_CONTENTS[11]~input_o ));
// synopsys translate_off
defparam \MEM_CONTENTS[11]~input .bus_hold = "false";
defparam \MEM_CONTENTS[11]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \MEM_CONTENTS[10]~input (
	.i(MEM_CONTENTS[10]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\MEM_CONTENTS[10]~input_o ));
// synopsys translate_off
defparam \MEM_CONTENTS[10]~input .bus_hold = "false";
defparam \MEM_CONTENTS[10]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_lcell_comb inst17(
// Equation(s):
// \inst17~combout  = (!\MEM_CONTENTS[15]~input_o  & (\MEM_CONTENTS[14]~input_o  & (!\MEM_CONTENTS[11]~input_o  & !\MEM_CONTENTS[10]~input_o )))

	.dataa(!\MEM_CONTENTS[15]~input_o ),
	.datab(!\MEM_CONTENTS[14]~input_o ),
	.datac(!\MEM_CONTENTS[11]~input_o ),
	.datad(!\MEM_CONTENTS[10]~input_o ),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\inst17~combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam inst17.extended_lut = "off";
defparam inst17.lut_mask = 64'h2000200020002000;
defparam inst17.shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \inst17~0 (
// Equation(s):
// \inst17~0_combout  = (!\MEM_CONTENTS[11]~input_o  & !\MEM_CONTENTS[10]~input_o )

	.dataa(!\MEM_CONTENTS[11]~input_o ),
	.datab(!\MEM_CONTENTS[10]~input_o ),
	.datac(gnd),
	.datad(gnd),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\inst17~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \inst17~0 .extended_lut = "off";
defparam \inst17~0 .lut_mask = 64'h8888888888888888;
defparam \inst17~0 .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb inst18(
// Equation(s):
// \inst18~combout  = (\MEM_CONTENTS[15]~input_o  & (!\MEM_CONTENTS[14]~input_o  & (!\MEM_CONTENTS[11]~input_o  & !\MEM_CONTENTS[10]~input_o )))

	.dataa(!\MEM_CONTENTS[15]~input_o ),
	.datab(!\MEM_CONTENTS[14]~input_o ),
	.datac(!\MEM_CONTENTS[11]~input_o ),
	.datad(!\MEM_CONTENTS[10]~input_o ),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\inst18~combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam inst18.extended_lut = "off";
defparam inst18.lut_mask = 64'h4000400040004000;
defparam inst18.shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb inst8(
// Equation(s):
// \inst8~combout  = (\MEM_CONTENTS[11]~input_o  & \MEM_CONTENTS[10]~input_o )

	.dataa(!\MEM_CONTENTS[11]~input_o ),
	.datab(!\MEM_CONTENTS[10]~input_o ),
	.datac(gnd),
	.datad(gnd),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\inst8~combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam inst8.extended_lut = "off";
defparam inst8.lut_mask = 64'h1111111111111111;
defparam inst8.shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb inst10(
// Equation(s):
// \inst10~combout  = (\MEM_CONTENTS[11]~input_o  & !\MEM_CONTENTS[10]~input_o )

	.dataa(!\MEM_CONTENTS[11]~input_o ),
	.datab(!\MEM_CONTENTS[10]~input_o ),
	.datac(gnd),
	.datad(gnd),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\inst10~combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam inst10.extended_lut = "off";
defparam inst10.lut_mask = 64'h4444444444444444;
defparam inst10.shared_arith = "off";
// synopsys translate_on

cyclonev_io_ibuf \MEM_CONTENTS[13]~input (
	.i(MEM_CONTENTS[13]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\MEM_CONTENTS[13]~input_o ));
// synopsys translate_off
defparam \MEM_CONTENTS[13]~input .bus_hold = "false";
defparam \MEM_CONTENTS[13]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \MEM_CONTENTS[12]~input (
	.i(MEM_CONTENTS[12]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\MEM_CONTENTS[12]~input_o ));
// synopsys translate_off
defparam \MEM_CONTENTS[12]~input .bus_hold = "false";
defparam \MEM_CONTENTS[12]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \MEM_CONTENTS[3]~input (
	.i(MEM_CONTENTS[3]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\MEM_CONTENTS[3]~input_o ));
// synopsys translate_off
defparam \MEM_CONTENTS[3]~input .bus_hold = "false";
defparam \MEM_CONTENTS[3]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \MEM_CONTENTS[2]~input (
	.i(MEM_CONTENTS[2]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\MEM_CONTENTS[2]~input_o ));
// synopsys translate_off
defparam \MEM_CONTENTS[2]~input .bus_hold = "false";
defparam \MEM_CONTENTS[2]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \MEM_CONTENTS[1]~input (
	.i(MEM_CONTENTS[1]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\MEM_CONTENTS[1]~input_o ));
// synopsys translate_off
defparam \MEM_CONTENTS[1]~input .bus_hold = "false";
defparam \MEM_CONTENTS[1]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \MEM_CONTENTS[0]~input (
	.i(MEM_CONTENTS[0]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\MEM_CONTENTS[0]~input_o ));
// synopsys translate_off
defparam \MEM_CONTENTS[0]~input .bus_hold = "false";
defparam \MEM_CONTENTS[0]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \MEM_CONTENTS[9]~input (
	.i(MEM_CONTENTS[9]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\MEM_CONTENTS[9]~input_o ));
// synopsys translate_off
defparam \MEM_CONTENTS[9]~input .bus_hold = "false";
defparam \MEM_CONTENTS[9]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \MEM_CONTENTS[8]~input (
	.i(MEM_CONTENTS[8]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\MEM_CONTENTS[8]~input_o ));
// synopsys translate_off
defparam \MEM_CONTENTS[8]~input .bus_hold = "false";
defparam \MEM_CONTENTS[8]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \REG_2[3]~input (
	.i(REG_2[3]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\REG_2[3]~input_o ));
// synopsys translate_off
defparam \REG_2[3]~input .bus_hold = "false";
defparam \REG_2[3]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \REG_1[3]~input (
	.i(REG_1[3]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\REG_1[3]~input_o ));
// synopsys translate_off
defparam \REG_1[3]~input .bus_hold = "false";
defparam \REG_1[3]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_lcell_comb \inst5|LPM_MUX_component|auto_generated|l2_w3_n0_mux_dataout~0 (
// Equation(s):
// \inst5|LPM_MUX_component|auto_generated|l2_w3_n0_mux_dataout~0_combout  = (!\MEM_CONTENTS[13]~input_o  & (\MEM_CONTENTS[12]~input_o  & ((\REG_1[3]~input_o )))) # (\MEM_CONTENTS[13]~input_o  & (!\MEM_CONTENTS[12]~input_o  & (\REG_2[3]~input_o )))

	.dataa(!\MEM_CONTENTS[13]~input_o ),
	.datab(!\MEM_CONTENTS[12]~input_o ),
	.datac(!\REG_2[3]~input_o ),
	.datad(!\REG_1[3]~input_o ),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\inst5|LPM_MUX_component|auto_generated|l2_w3_n0_mux_dataout~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \inst5|LPM_MUX_component|auto_generated|l2_w3_n0_mux_dataout~0 .extended_lut = "off";
defparam \inst5|LPM_MUX_component|auto_generated|l2_w3_n0_mux_dataout~0 .lut_mask = 64'h0426042604260426;
defparam \inst5|LPM_MUX_component|auto_generated|l2_w3_n0_mux_dataout~0 .shared_arith = "off";
// synopsys translate_on

cyclonev_io_ibuf \REG_2[2]~input (
	.i(REG_2[2]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\REG_2[2]~input_o ));
// synopsys translate_off
defparam \REG_2[2]~input .bus_hold = "false";
defparam \REG_2[2]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \REG_1[2]~input (
	.i(REG_1[2]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\REG_1[2]~input_o ));
// synopsys translate_off
defparam \REG_1[2]~input .bus_hold = "false";
defparam \REG_1[2]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_lcell_comb \inst5|LPM_MUX_component|auto_generated|l2_w2_n0_mux_dataout~0 (
// Equation(s):
// \inst5|LPM_MUX_component|auto_generated|l2_w2_n0_mux_dataout~0_combout  = (!\MEM_CONTENTS[13]~input_o  & (\MEM_CONTENTS[12]~input_o  & ((\REG_1[2]~input_o )))) # (\MEM_CONTENTS[13]~input_o  & (!\MEM_CONTENTS[12]~input_o  & (\REG_2[2]~input_o )))

	.dataa(!\MEM_CONTENTS[13]~input_o ),
	.datab(!\MEM_CONTENTS[12]~input_o ),
	.datac(!\REG_2[2]~input_o ),
	.datad(!\REG_1[2]~input_o ),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\inst5|LPM_MUX_component|auto_generated|l2_w2_n0_mux_dataout~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \inst5|LPM_MUX_component|auto_generated|l2_w2_n0_mux_dataout~0 .extended_lut = "off";
defparam \inst5|LPM_MUX_component|auto_generated|l2_w2_n0_mux_dataout~0 .lut_mask = 64'h0426042604260426;
defparam \inst5|LPM_MUX_component|auto_generated|l2_w2_n0_mux_dataout~0 .shared_arith = "off";
// synopsys translate_on

cyclonev_io_ibuf \REG_2[1]~input (
	.i(REG_2[1]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\REG_2[1]~input_o ));
// synopsys translate_off
defparam \REG_2[1]~input .bus_hold = "false";
defparam \REG_2[1]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \REG_1[1]~input (
	.i(REG_1[1]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\REG_1[1]~input_o ));
// synopsys translate_off
defparam \REG_1[1]~input .bus_hold = "false";
defparam \REG_1[1]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_lcell_comb \inst5|LPM_MUX_component|auto_generated|l2_w1_n0_mux_dataout~0 (
// Equation(s):
// \inst5|LPM_MUX_component|auto_generated|l2_w1_n0_mux_dataout~0_combout  = (!\MEM_CONTENTS[13]~input_o  & (\MEM_CONTENTS[12]~input_o  & ((\REG_1[1]~input_o )))) # (\MEM_CONTENTS[13]~input_o  & (!\MEM_CONTENTS[12]~input_o  & (\REG_2[1]~input_o )))

	.dataa(!\MEM_CONTENTS[13]~input_o ),
	.datab(!\MEM_CONTENTS[12]~input_o ),
	.datac(!\REG_2[1]~input_o ),
	.datad(!\REG_1[1]~input_o ),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\inst5|LPM_MUX_component|auto_generated|l2_w1_n0_mux_dataout~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \inst5|LPM_MUX_component|auto_generated|l2_w1_n0_mux_dataout~0 .extended_lut = "off";
defparam \inst5|LPM_MUX_component|auto_generated|l2_w1_n0_mux_dataout~0 .lut_mask = 64'h0426042604260426;
defparam \inst5|LPM_MUX_component|auto_generated|l2_w1_n0_mux_dataout~0 .shared_arith = "off";
// synopsys translate_on

cyclonev_io_ibuf \REG_2[0]~input (
	.i(REG_2[0]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\REG_2[0]~input_o ));
// synopsys translate_off
defparam \REG_2[0]~input .bus_hold = "false";
defparam \REG_2[0]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \REG_1[0]~input (
	.i(REG_1[0]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\REG_1[0]~input_o ));
// synopsys translate_off
defparam \REG_1[0]~input .bus_hold = "false";
defparam \REG_1[0]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_lcell_comb \inst5|LPM_MUX_component|auto_generated|l2_w0_n0_mux_dataout~0 (
// Equation(s):
// \inst5|LPM_MUX_component|auto_generated|l2_w0_n0_mux_dataout~0_combout  = (!\MEM_CONTENTS[13]~input_o  & (\MEM_CONTENTS[12]~input_o  & ((\REG_1[0]~input_o )))) # (\MEM_CONTENTS[13]~input_o  & (!\MEM_CONTENTS[12]~input_o  & (\REG_2[0]~input_o )))

	.dataa(!\MEM_CONTENTS[13]~input_o ),
	.datab(!\MEM_CONTENTS[12]~input_o ),
	.datac(!\REG_2[0]~input_o ),
	.datad(!\REG_1[0]~input_o ),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\inst5|LPM_MUX_component|auto_generated|l2_w0_n0_mux_dataout~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \inst5|LPM_MUX_component|auto_generated|l2_w0_n0_mux_dataout~0 .extended_lut = "off";
defparam \inst5|LPM_MUX_component|auto_generated|l2_w0_n0_mux_dataout~0 .lut_mask = 64'h0426042604260426;
defparam \inst5|LPM_MUX_component|auto_generated|l2_w0_n0_mux_dataout~0 .shared_arith = "off";
// synopsys translate_on

cyclonev_io_ibuf \MEM_CONTENTS[7]~input (
	.i(MEM_CONTENTS[7]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\MEM_CONTENTS[7]~input_o ));
// synopsys translate_off
defparam \MEM_CONTENTS[7]~input .bus_hold = "false";
defparam \MEM_CONTENTS[7]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \MEM_CONTENTS[6]~input (
	.i(MEM_CONTENTS[6]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\MEM_CONTENTS[6]~input_o ));
// synopsys translate_off
defparam \MEM_CONTENTS[6]~input .bus_hold = "false";
defparam \MEM_CONTENTS[6]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \MEM_CONTENTS[5]~input (
	.i(MEM_CONTENTS[5]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\MEM_CONTENTS[5]~input_o ));
// synopsys translate_off
defparam \MEM_CONTENTS[5]~input .bus_hold = "false";
defparam \MEM_CONTENTS[5]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \MEM_CONTENTS[4]~input (
	.i(MEM_CONTENTS[4]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\MEM_CONTENTS[4]~input_o ));
// synopsys translate_off
defparam \MEM_CONTENTS[4]~input .bus_hold = "false";
defparam \MEM_CONTENTS[4]~input .simulate_z_as = "z";
// synopsys translate_on

assign REG_1_LOAD = \REG_1_LOAD~output_o ;

assign TON[1] = \TON[1]~output_o ;

assign TON[0] = \TON[0]~output_o ;

assign TO[1] = \TO[1]~output_o ;

assign TO[0] = \TO[0]~output_o ;

assign JMPN[1] = \JMPN[1]~output_o ;

assign JMPN[0] = \JMPN[0]~output_o ;

assign REG_1_CLRN = \REG_1_CLRN~output_o ;

assign REG_2_LOAD = \REG_2_LOAD~output_o ;

assign REG_2_CLRN = \REG_2_CLRN~output_o ;

assign PC_LOAD = \PC_LOAD~output_o ;

assign JMP[1] = \JMP[1]~output_o ;

assign JMP[0] = \JMP[0]~output_o ;

assign PC_CLRN = \PC_CLRN~output_o ;

assign IN[1] = \IN[1]~output_o ;

assign IN[0] = \IN[0]~output_o ;

assign INN[1] = \INN[1]~output_o ;

assign INN[0] = \INN[0]~output_o ;

assign PC_D[3] = \PC_D[3]~output_o ;

assign PC_D[2] = \PC_D[2]~output_o ;

assign PC_D[1] = \PC_D[1]~output_o ;

assign PC_D[0] = \PC_D[0]~output_o ;

assign ULA_Op[1] = \ULA_Op[1]~output_o ;

assign ULA_Op[0] = \ULA_Op[0]~output_o ;

assign ULA_OPERAND[3] = \ULA_OPERAND[3]~output_o ;

assign ULA_OPERAND[2] = \ULA_OPERAND[2]~output_o ;

assign ULA_OPERAND[1] = \ULA_OPERAND[1]~output_o ;

assign ULA_OPERAND[0] = \ULA_OPERAND[0]~output_o ;

assign ULA_REGISTER[3] = \ULA_REGISTER[3]~output_o ;

assign ULA_REGISTER[2] = \ULA_REGISTER[2]~output_o ;

assign ULA_REGISTER[1] = \ULA_REGISTER[1]~output_o ;

assign ULA_REGISTER[0] = \ULA_REGISTER[0]~output_o ;

endmodule
