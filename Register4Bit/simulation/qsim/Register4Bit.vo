// Copyright (C) 2021  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.

// VENDOR "Altera"
// PROGRAM "Quartus Prime"
// VERSION "Version 21.1.0 Build 842 10/21/2021 SJ Lite Edition"

// DATE "10/18/2022 14:10:46"

// 
// Device: Altera 5CGXFC7C7F23C8 Package FBGA484
// 

// 
// This Verilog file should be used for Questa Intel FPGA (Verilog) only
// 

`timescale 1 ps/ 1 ps

module Register4Bit (
	Q,
	CLRN,
	LOAD,
	CLK,
	D);
output 	[3:0] Q;
input 	CLRN;
input 	LOAD;
input 	CLK;
input 	[3:0] D;

wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \Q[3]~output_o ;
wire \Q[2]~output_o ;
wire \Q[1]~output_o ;
wire \Q[0]~output_o ;
wire \LOAD~input_o ;
wire \CLK~input_o ;
wire \inst1~combout ;
wire \D[3]~input_o ;
wire \CLRN~input_o ;
wire \inst5~q ;
wire \D[2]~input_o ;
wire \inst4~q ;
wire \D[1]~input_o ;
wire \inst3~q ;
wire \D[0]~input_o ;
wire \inst~q ;


cyclonev_io_obuf \Q[3]~output (
	.i(\inst5~q ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\Q[3]~output_o ),
	.obar());
// synopsys translate_off
defparam \Q[3]~output .bus_hold = "false";
defparam \Q[3]~output .open_drain_output = "false";
defparam \Q[3]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \Q[2]~output (
	.i(\inst4~q ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\Q[2]~output_o ),
	.obar());
// synopsys translate_off
defparam \Q[2]~output .bus_hold = "false";
defparam \Q[2]~output .open_drain_output = "false";
defparam \Q[2]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \Q[1]~output (
	.i(\inst3~q ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\Q[1]~output_o ),
	.obar());
// synopsys translate_off
defparam \Q[1]~output .bus_hold = "false";
defparam \Q[1]~output .open_drain_output = "false";
defparam \Q[1]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \Q[0]~output (
	.i(\inst~q ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\Q[0]~output_o ),
	.obar());
// synopsys translate_off
defparam \Q[0]~output .bus_hold = "false";
defparam \Q[0]~output .open_drain_output = "false";
defparam \Q[0]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_ibuf \LOAD~input (
	.i(LOAD),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\LOAD~input_o ));
// synopsys translate_off
defparam \LOAD~input .bus_hold = "false";
defparam \LOAD~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \CLK~input (
	.i(CLK),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\CLK~input_o ));
// synopsys translate_off
defparam \CLK~input .bus_hold = "false";
defparam \CLK~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_lcell_comb inst1(
// Equation(s):
// \inst1~combout  = LCELL((\LOAD~input_o  & \CLK~input_o ))

	.dataa(!\LOAD~input_o ),
	.datab(!\CLK~input_o ),
	.datac(gnd),
	.datad(gnd),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\inst1~combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam inst1.extended_lut = "off";
defparam inst1.lut_mask = 64'h1111111111111111;
defparam inst1.shared_arith = "off";
// synopsys translate_on

cyclonev_io_ibuf \D[3]~input (
	.i(D[3]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\D[3]~input_o ));
// synopsys translate_off
defparam \D[3]~input .bus_hold = "false";
defparam \D[3]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \CLRN~input (
	.i(CLRN),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\CLRN~input_o ));
// synopsys translate_off
defparam \CLRN~input .bus_hold = "false";
defparam \CLRN~input .simulate_z_as = "z";
// synopsys translate_on

dffeas inst5(
	.clk(\inst1~combout ),
	.d(\D[3]~input_o ),
	.asdata(vcc),
	.clrn(\CLRN~input_o ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\inst5~q ),
	.prn(vcc));
// synopsys translate_off
defparam inst5.is_wysiwyg = "true";
defparam inst5.power_up = "low";
// synopsys translate_on

cyclonev_io_ibuf \D[2]~input (
	.i(D[2]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\D[2]~input_o ));
// synopsys translate_off
defparam \D[2]~input .bus_hold = "false";
defparam \D[2]~input .simulate_z_as = "z";
// synopsys translate_on

dffeas inst4(
	.clk(\inst1~combout ),
	.d(\D[2]~input_o ),
	.asdata(vcc),
	.clrn(\CLRN~input_o ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\inst4~q ),
	.prn(vcc));
// synopsys translate_off
defparam inst4.is_wysiwyg = "true";
defparam inst4.power_up = "low";
// synopsys translate_on

cyclonev_io_ibuf \D[1]~input (
	.i(D[1]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\D[1]~input_o ));
// synopsys translate_off
defparam \D[1]~input .bus_hold = "false";
defparam \D[1]~input .simulate_z_as = "z";
// synopsys translate_on

dffeas inst3(
	.clk(\inst1~combout ),
	.d(\D[1]~input_o ),
	.asdata(vcc),
	.clrn(\CLRN~input_o ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\inst3~q ),
	.prn(vcc));
// synopsys translate_off
defparam inst3.is_wysiwyg = "true";
defparam inst3.power_up = "low";
// synopsys translate_on

cyclonev_io_ibuf \D[0]~input (
	.i(D[0]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\D[0]~input_o ));
// synopsys translate_off
defparam \D[0]~input .bus_hold = "false";
defparam \D[0]~input .simulate_z_as = "z";
// synopsys translate_on

dffeas inst(
	.clk(\inst1~combout ),
	.d(\D[0]~input_o ),
	.asdata(vcc),
	.clrn(\CLRN~input_o ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\inst~q ),
	.prn(vcc));
// synopsys translate_off
defparam inst.is_wysiwyg = "true";
defparam inst.power_up = "low";
// synopsys translate_on

assign Q[3] = \Q[3]~output_o ;

assign Q[2] = \Q[2]~output_o ;

assign Q[1] = \Q[1]~output_o ;

assign Q[0] = \Q[0]~output_o ;

endmodule
